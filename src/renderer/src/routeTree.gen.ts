/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as UsersIndexImport } from './routes/users/index'
import { Route as FiscalAttestationsIndexImport } from './routes/fiscal-attestations/index'
import { Route as UsersUserIdIndexImport } from './routes/users/$userId/index'
import { Route as FiscalAttestationsFiscalATIdIndexImport } from './routes/fiscal-attestations/$fiscalATId/index'
import { Route as UsersUserIdViewIndexImport } from './routes/users/$userId/view/index'
import { Route as FiscalAttestationsFiscalATIdViewIndexImport } from './routes/fiscal-attestations/$fiscalATId/view/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UsersIndexRoute = UsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => rootRoute,
} as any)

const FiscalAttestationsIndexRoute = FiscalAttestationsIndexImport.update({
  id: '/fiscal-attestations/',
  path: '/fiscal-attestations/',
  getParentRoute: () => rootRoute,
} as any)

const UsersUserIdIndexRoute = UsersUserIdIndexImport.update({
  id: '/users/$userId/',
  path: '/users/$userId/',
  getParentRoute: () => rootRoute,
} as any)

const FiscalAttestationsFiscalATIdIndexRoute =
  FiscalAttestationsFiscalATIdIndexImport.update({
    id: '/fiscal-attestations/$fiscalATId/',
    path: '/fiscal-attestations/$fiscalATId/',
    getParentRoute: () => rootRoute,
  } as any)

const UsersUserIdViewIndexRoute = UsersUserIdViewIndexImport.update({
  id: '/users/$userId/view/',
  path: '/users/$userId/view/',
  getParentRoute: () => rootRoute,
} as any)

const FiscalAttestationsFiscalATIdViewIndexRoute =
  FiscalAttestationsFiscalATIdViewIndexImport.update({
    id: '/fiscal-attestations/$fiscalATId/view/',
    path: '/fiscal-attestations/$fiscalATId/view/',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/fiscal-attestations/': {
      id: '/fiscal-attestations/'
      path: '/fiscal-attestations'
      fullPath: '/fiscal-attestations'
      preLoaderRoute: typeof FiscalAttestationsIndexImport
      parentRoute: typeof rootRoute
    }
    '/users/': {
      id: '/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersIndexImport
      parentRoute: typeof rootRoute
    }
    '/fiscal-attestations/$fiscalATId/': {
      id: '/fiscal-attestations/$fiscalATId/'
      path: '/fiscal-attestations/$fiscalATId'
      fullPath: '/fiscal-attestations/$fiscalATId'
      preLoaderRoute: typeof FiscalAttestationsFiscalATIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/users/$userId/': {
      id: '/users/$userId/'
      path: '/users/$userId'
      fullPath: '/users/$userId'
      preLoaderRoute: typeof UsersUserIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/fiscal-attestations/$fiscalATId/view/': {
      id: '/fiscal-attestations/$fiscalATId/view/'
      path: '/fiscal-attestations/$fiscalATId/view'
      fullPath: '/fiscal-attestations/$fiscalATId/view'
      preLoaderRoute: typeof FiscalAttestationsFiscalATIdViewIndexImport
      parentRoute: typeof rootRoute
    }
    '/users/$userId/view/': {
      id: '/users/$userId/view/'
      path: '/users/$userId/view'
      fullPath: '/users/$userId/view'
      preLoaderRoute: typeof UsersUserIdViewIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/fiscal-attestations': typeof FiscalAttestationsIndexRoute
  '/users': typeof UsersIndexRoute
  '/fiscal-attestations/$fiscalATId': typeof FiscalAttestationsFiscalATIdIndexRoute
  '/users/$userId': typeof UsersUserIdIndexRoute
  '/fiscal-attestations/$fiscalATId/view': typeof FiscalAttestationsFiscalATIdViewIndexRoute
  '/users/$userId/view': typeof UsersUserIdViewIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/fiscal-attestations': typeof FiscalAttestationsIndexRoute
  '/users': typeof UsersIndexRoute
  '/fiscal-attestations/$fiscalATId': typeof FiscalAttestationsFiscalATIdIndexRoute
  '/users/$userId': typeof UsersUserIdIndexRoute
  '/fiscal-attestations/$fiscalATId/view': typeof FiscalAttestationsFiscalATIdViewIndexRoute
  '/users/$userId/view': typeof UsersUserIdViewIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/fiscal-attestations/': typeof FiscalAttestationsIndexRoute
  '/users/': typeof UsersIndexRoute
  '/fiscal-attestations/$fiscalATId/': typeof FiscalAttestationsFiscalATIdIndexRoute
  '/users/$userId/': typeof UsersUserIdIndexRoute
  '/fiscal-attestations/$fiscalATId/view/': typeof FiscalAttestationsFiscalATIdViewIndexRoute
  '/users/$userId/view/': typeof UsersUserIdViewIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/fiscal-attestations'
    | '/users'
    | '/fiscal-attestations/$fiscalATId'
    | '/users/$userId'
    | '/fiscal-attestations/$fiscalATId/view'
    | '/users/$userId/view'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/fiscal-attestations'
    | '/users'
    | '/fiscal-attestations/$fiscalATId'
    | '/users/$userId'
    | '/fiscal-attestations/$fiscalATId/view'
    | '/users/$userId/view'
  id:
    | '__root__'
    | '/'
    | '/fiscal-attestations/'
    | '/users/'
    | '/fiscal-attestations/$fiscalATId/'
    | '/users/$userId/'
    | '/fiscal-attestations/$fiscalATId/view/'
    | '/users/$userId/view/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  FiscalAttestationsIndexRoute: typeof FiscalAttestationsIndexRoute
  UsersIndexRoute: typeof UsersIndexRoute
  FiscalAttestationsFiscalATIdIndexRoute: typeof FiscalAttestationsFiscalATIdIndexRoute
  UsersUserIdIndexRoute: typeof UsersUserIdIndexRoute
  FiscalAttestationsFiscalATIdViewIndexRoute: typeof FiscalAttestationsFiscalATIdViewIndexRoute
  UsersUserIdViewIndexRoute: typeof UsersUserIdViewIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  FiscalAttestationsIndexRoute: FiscalAttestationsIndexRoute,
  UsersIndexRoute: UsersIndexRoute,
  FiscalAttestationsFiscalATIdIndexRoute:
    FiscalAttestationsFiscalATIdIndexRoute,
  UsersUserIdIndexRoute: UsersUserIdIndexRoute,
  FiscalAttestationsFiscalATIdViewIndexRoute:
    FiscalAttestationsFiscalATIdViewIndexRoute,
  UsersUserIdViewIndexRoute: UsersUserIdViewIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/fiscal-attestations/",
        "/users/",
        "/fiscal-attestations/$fiscalATId/",
        "/users/$userId/",
        "/fiscal-attestations/$fiscalATId/view/",
        "/users/$userId/view/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/fiscal-attestations/": {
      "filePath": "fiscal-attestations/index.tsx"
    },
    "/users/": {
      "filePath": "users/index.tsx"
    },
    "/fiscal-attestations/$fiscalATId/": {
      "filePath": "fiscal-attestations/$fiscalATId/index.tsx"
    },
    "/users/$userId/": {
      "filePath": "users/$userId/index.tsx"
    },
    "/fiscal-attestations/$fiscalATId/view/": {
      "filePath": "fiscal-attestations/$fiscalATId/view/index.tsx"
    },
    "/users/$userId/view/": {
      "filePath": "users/$userId/view/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
